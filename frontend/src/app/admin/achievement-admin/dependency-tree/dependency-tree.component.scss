@use '../../../../styles/abstracts/tokens';
@use '../../../../styles/abstracts/mixins';

// Screen reader only utility class
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.dependency-tree-container {
  padding: var(--space-lg);
  height: 100%;
  display: flex;
  flex-direction: column;
}

.tree-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-lg);
  padding-bottom: var(--space-md);
  border-bottom: 1px solid var(--outline-variant);

  .tree-title {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--on-surface);
    margin: 0;

    mat-icon {
      color: var(--primary);
    }
  }

  .tree-controls {
    display: flex;
    gap: var(--space-xs);
  }
}

.tree-content {
  flex: 1;
  position: relative;
  overflow: hidden;
}

// Loading State
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 400px;
  gap: var(--space-lg);

  p {
    color: var(--on-surface-variant);
    font-size: var(--font-size-md);
    margin: 0;
  }
}

// Tree Visualization
.tree-visualization {
  height: 100%;
  display: flex;
  gap: var(--space-lg);
}

.tree-container {
  flex: 1;
  border: 1px solid var(--outline-variant);
  border-radius: var(--border-radius-md);
  background: var(--surface-container-lowest);
  position: relative;
  overflow: hidden;

  // D3 Tree Styles
  :deep(svg) {
    width: 100%;
    height: 100%;
    font-family: var(--font-family);
  }

  :deep(.link) {
    fill: none;
    stroke: var(--outline);
    stroke-width: 2px;
    stroke-opacity: 0.6;
  }

  :deep(.node) {
    cursor: pointer;

    circle {
      stroke: var(--outline);
      stroke-width: 2px;
      transition: all 0.3s ease;
    }

    &.completed circle {
      fill: var(--primary);
      stroke: var(--primary);
      filter: drop-shadow(0 0 4px rgba(33, 150, 243, 0.4));
    }

    &.incomplete circle {
      fill: var(--surface-container);
      stroke: var(--outline-variant);
    }

    &.highlighted circle {
      stroke: var(--error);
      stroke-width: 3px;
      filter: drop-shadow(0 0 6px rgba(244, 67, 54, 0.6));
      animation: pulse 2s infinite;
    }

    &:hover circle {
      stroke-width: 3px;
      filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.3));
    }

    .node-label {
      font-size: 12px;
      fill: var(--on-surface);
      font-weight: var(--font-weight-medium);
    }
  }

  // Category-specific colors
  :deep(.category-easy) circle {
    fill: #4caf50;
    stroke: #388e3c;
  }

  :deep(.category-medium) circle {
    fill: #2196f3;
    stroke: #1976d2;
  }

  :deep(.category-hard) circle {
    fill: #9c27b0;
    stroke: #7b1fa2;
  }

  :deep(.category-legendary) circle {
    fill: #ffc107;
    stroke: #f57c00;
  }

  :deep(.legend) {
    .legend-item {
      cursor: default;

      text {
        fill: var(--on-surface);
        font-weight: var(--font-weight-medium);
      }
    }
  }
}

// Instructions Panel
.tree-instructions {
  width: 250px;
  background: var(--surface-container-low);
  border: 1px solid var(--outline-variant);
  border-radius: var(--border-radius-md);
  padding: var(--space-lg);

  h4 {
    font-size: var(--font-size-md);
    font-weight: var(--font-weight-semibold);
    color: var(--on-surface);
    margin: 0 0 var(--space-md) 0;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;

    li {
      font-size: var(--font-size-sm);
      color: var(--on-surface-variant);
      margin-bottom: var(--space-sm);
      line-height: 1.4;

      strong {
        color: var(--on-surface);
        font-weight: var(--font-weight-semibold);
      }
    }
  }
}

// Empty State
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 400px;
  text-align: center;
  gap: var(--space-md);

  mat-icon {
    font-size: 64px;
    width: 64px;
    height: 64px;
    color: var(--on-surface-variant);
    opacity: 0.5;
  }

  h3 {
    color: var(--on-surface);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin: 0;
  }

  p {
    color: var(--on-surface-variant);
    margin: 0 0 var(--space-lg) 0;
    max-width: 300px;
  }

  button {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
  }
}

// Tooltip Styles
:global(.tree-tooltip) {
  position: absolute;
  background: var(--surface-container-high);
  border: 1px solid var(--outline);
  border-radius: var(--border-radius-sm);
  padding: var(--space-sm) var(--space-md);
  font-size: var(--font-size-sm);
  color: var(--on-surface);
  box-shadow: var(--elevation-2);
  pointer-events: none;
  z-index: 1000;
  max-width: 200px;

  strong {
    color: var(--primary);
    font-weight: var(--font-weight-semibold);
  }
}

// Animations
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

// Mobile Responsiveness
@media (max-width: 768px) {
  .dependency-tree-container {
    padding: var(--space-md);
  }

  .tree-visualization {
    flex-direction: column;
    gap: var(--space-md);
  }

  .tree-instructions {
    width: 100%;
    order: -1;
  }

  .tree-container {
    height: 400px;
  }
}

// Dark Mode
:host-context(.dark-theme) {
  .tree-container {
    background: var(--surface-container);
  }

  :deep(.link) {
    stroke: var(--outline);
  }

  :deep(.node.incomplete) circle {
    fill: var(--surface-container-high);
  }
}